% adb

; https://adbinstaller.com/commands
; https://adbshell.com/commands

# Display a property
adb -s "<devices>" shell getprop "<property>"

# Install an APK
adb -s "<devices>" install -r <apk_path>

# Uninstall an APK
adb uninstall <adb-installed-apps>

# Uninstall .apk withour deleting data
adb uninstall -k <apk_path>

# Clear data given an application package
adb -s "<devices>" shell pm clear "<package>"

# Dispatch a deep-link
adb -s "<devices>" shell am start "<uri>"

# enable adb over wifi
adb get-state 1>/dev/null 2>&1 \
  && adb tcpip 5555 \
  && ADBIP=$(adb shell "ip addr show wlan0 | grep -e wlan0$ | cut -d\" \" -f 6 | cut -d/ -f 1") \
  && adb connect "$ADBIP:5555" \
  && echo 'done, disconenct your device' \
  || echo 'no device attached'

$ devices: adb devices | tail -n +2 | cut -sf 1


% android, ssh, termux

# Enable password authentication
sed -Ei "s/PasswordAuthentication.*/PasswordAuthentication true/g" "<sshd_config>"

# Disable password authentication
sed -Ei "s/PasswordAuthentication.*/PasswordAuthentication false/g" "<sshd_config>"

$ ssh_config: echo "${PREFIX}/etc/ssh/sshd_config"

% android, apps

# Open Google Play Store profile page for an app
dot browser google-lucky "<query> site:play.google.com"

# increase maximum volume on mtk devices through engineer mode
adb shell su -c 'am start -n com.mediatek.engineermode/.audio.AudioVolumePlayback'

% adb settings

# settings list
adb shell settings list <adb-settings-namespace>

# settings provider
adb shell settings <adb-settings-cmd> <adb-settings-namespace> <adb-settings-global>

# set private dns provider
adb shell su -c "settings put global private_dns_specifier <adb-dns-hosts>"

# set private dns mode
adb shell su -c "settings put global private_dns_mode <adb-dns-modes>"

# toggle show touches or pointer location
[[ `adb shell settings get system <adb-touch-point>` == 1 ]] && adb shell settings put system <adb-touch-point> 0 || adb shell settings put system <adb-touch-point> 1

$ adb-touch-point: echo "show_touches pointer_location" | tr ' ' '\n'
$ adb-dns-modes: echo "hostname opportunistic off" | tr ' ' '\n'
$ adb-dns-hosts: echo "adwrt.ga adwrt.ml dns.adguard.com" | tr ' ' '\n'
$ adb-settings-namespace: echo "global system secure" | tr ' ' '\n'
$ adb-settings-cmd: echo "get put delete" | tr ' ' '\n'
$ adb-settings-global: adb shell settings list global | awk -F '=' '{print $1}'

# get current system volume level in android.
adb shell settings get system volume_system

# get current system notification sound in android.
adb shell settings get system notification_sound

# find android device identifier(device id)
adb shell settings get secure android_id

# find bluetooth mac address in android.
adb shell settings get secure bluetooth_address

# get current mobile data status in android.
adb shell settings get global mobile_data

# get current wifi status in android.
adb shell settings get global wifi_on


% adb wm

# get screen physical density in android
adb shell wm density

# get screen physical size in android
adb shell wm size

% adb permissions

# get a list of all on-device dangerous permissions
adb shell pm list permissions -g -d | awk -F: '/permission:/ {print $2}'

# Listing permissions of application
adb shell dumpsys package <adb-installed-apps>

# Grant a permission to an app
adb shell pm grant <adb-installed-apps> android.permission.WRITE_SECURE_SETTINGS

# Revoke a permission from an app.
adb shell pm revoke <adb-installed-apps> [ Permission]

# reset permissions
adb shell pm reset-permissions -p <adb-installed-apps>

% adb pm

#  list of installed apps
adb shell pm list packages | sed 's/package://g'

#  list of user running apps
adb shell ps -A | grep u0_ | awk '{print $NF}'

# list of system apps
adb shell pm list packages -s | sed 's/package://g'

# list of 3rd-party apps
adb shell pm list packages -3 | sed 's/package://g'

# list of enabled apps
adb shell pm list packages -e | sed 's/package://g'

# list of disabled apps
adb shell pm list packages -d | sed 's/package://g'

# list of app version
adb shell dumpsys package <adb-installed-apps> | grep -E "(versionName|codePath)" | sed 's/^ *//'

# list of all apps with version
adb shell dumpsys package | awk '/^[ ]*Package \[.*\] (.*)/ { i = index($0, "[") + 1; pkg = substr($0, i, index($0, "]") - i); } /[ ]*versionName=/ { { print pkg "\t" substr($0, index($0, "=") + 1); pkg = ""; } }'

# list of activity
adb shell dumpsys activity

# start app
adb shell monkey -p <adb-installed-apps> -c android.intent.category.LAUNCHER 1

# kill user running app
adb shell am kill <adb-running-apps>

# kill user running app as sudo
adb shell su -c 'killall <adb-running-apps>'

# force stop everything associated with app
adb shell am force-stop <adb-running-apps>

# disable specific package
adb shell pm disable-user --user 0 <adb-enabled-apps>

# disable third-party app
adb shell pm disable <adb-enabled-apps>

# enable specific package
adb shell pm enable <adb-disabled-apps>

$ adb-enabled-apps: adb shell pm list packages -s | sed 's/package://g'
$ adb-disabled-apps: adb shell pm list packages -d | sed 's/package://g'
$ adb-installed-apps: adb shell pm list packages | sed 's/package://g'
$ adb-running-apps: adb shell ps -A | grep u0_ | awk '{print $NF}'

# keyword filtering
adb shell pm list packages <keywords>

# get the apk path on the device's filesystem.
adb shell pm path <package-name>

# uninstall pm app
adb shell pm uninstall <adb-installed-apps>

% adb cat

# CPU info
adb shell cat /proc/cpuinfo

# RAM info
adb shell cat /proc/meminfo

% adb, input, keyevent

# home btn
adb shell input keyevent 3
# back btn
adb shell input keyevent 4
# call
adb shell input keyevent 5
# end call
adb shell input keyevent 6
# volume up
adb shell input keyevent 24
# volume down
adb shell input keyevent 25
# turn android device on and off. it will toggle device to on/off status.
adb shell input keyevent 26
# camera
adb shell input keyevent 27
# open browser
adb shell input keyevent 64
# enter
adb shell input keyevent 66
# delete (backspace)
adb shell input keyevent 67
# contacts
adb shell input keyevent 207
# brightness down/up
adb shell input keyevent 220/221
# cut/copy/paste
adb shell input keyevent 277/278/279

% adb, input, touch

# touch "FIle Transfer" usb mode
adb shell su -c 'input tap 370 1260'

% adb getprop

# get android version of connected device
adb shell getprop ro.build.version.release

# get ARM processor version
adb shell getprop ro.product.cpu.abilist

# get android system properties info.
adb shell getprop

# get sdk api level.
adb shell getprop ro.build.version.sdk

# get android security patch version.
adb shell getprop ro.build.version.security_patch

# get soc info.
adb shell getprop ro.board.platform

# get android version info.
adb shell getprop ro.build.version.release

# get android device model.
adb shell getprop ro.vendor.product.model

# get android device manufacturer.
adb shell getprop ro.product.manufacturer

# get adb serial number.
adb shell getprop ro.serialno

# get oem unlock status.
adb shell getprop ro.oem_unlock_supported

# get android device build fingerprint.
adb shell getprop ro.bootimage.build.fingerprint

# get wifi mac address
adb shell getprop ro.boot.wifimacaddr

# get wifi ip address
adb shell "ip addr show wlan0 | grep -e wlan0$ | cut -d\" \" -f 6 | cut -d/ -f 1"
