% network, httpie

# get network interfaces names
ifconfig -s -a | awk '$1 !~ /Iface/ {print $1}'

# make a request to a typicode microservice
http -v <method> "https://<service>.typicode.com/<endpoint>" <http-body>

$ method: echo -e 'GET\nPOST\nPUT'
$ service: echo -e 'jsonplaceholder\nanotherservice'
$ endpoint: case "${service}:${method}" in; "jsonplaceholder:post") echo -e 'e1\ne2\ne3';; esac

% network

# download all files from a website
wget -A <extensions> -m -p -E -k -K -np <url>

# Kill a process running on a given port
lsof -i :<port> \
  | awk '{l=$2} END {print l}' \
  | xargs kill

# List IP addresses connected on a given port
netstat -tn 2>/dev/null \
  | grep :<port> \
  | awk '{print $5}' \
  | cut -d: -f1 \
  | sort \
  | uniq -c \
  | sort -nr \
  | head

# Find primary, local IP address
ifconfig \
  | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' \
  | grep -Eo '([0-9]*\.){3}[0-9]*' \
  | grep -v '127.0.0.1' \
  | tail -n1

# returns default network interface name
ip route show default | awk '/default/ {print $5}'

# get MAC address of default network interface
cat /sys/class/net/$(ip route show default | awk '/default/ {print $5}')/address | cut -d ' ' -f 1

# find external/public IP
dig +short myip.opendns.com @resolver1.opendns.com

# find external/public IP
curl icanhazip.com

# Geolocation data for own IP
curl -sL "https://get.geojs.io/v1/ip/geo/<self_global_ip>" | jq

$ self_global_ip: dig +short myip.opendns.com @resolver1.opendns.com
$ process: lsof -iTCP -sTCP:LISTEN -n -P | sed -E "s/:([0-9][0-9][0-9]+) /:$(tput setaf 3)\1$(tput sgr0) /g" --- --header-lines 1

# get hostname from IP
getent hosts <IP> | awk '{print $2}'

# list all NM connections
nmcli con

# list active connections
nmcli c show --active

# list active connections name only
nmcli -t -f NAME c show --active

# start connection
nmcli c up id <nm-all>

# down connection
nmcli c down id <nm-active>

$ nm-all: nmcli -t -f NAME c show
$ nm-active: nmcli -t -f NAME c show --active

# get the mac address vendor
curl -w '\n' "https://api.macaddress.io/v1?apiKey=$MAC_ADDRESS_IO_API_KEY&search=$(getmac)"

; https://www.cyberciti.biz/networking/nmap-command-examples-tutorials/
; How do I scan specific ports using nmap?
% port

# find out which ports are opened
nc -v -z -n -w 1 <host> <ports>
$ ports: echo "ssh ftp sftp smtp 22 80 143 443" | tr ' ' '\n'

nmap -p [port] hostName
## Scan port 80
nmap -p 80 192.168.1.1

## Scan TCP port 80
nmap -p T:80 192.168.1.1

## Scan UDP port 53
nmap -p U:53 192.168.1.1

## Scan two ports ##
nmap -p 80,443 192.168.1.1

## Scan port ranges ##
nmap -p 80-200 192.168.1.1

## Combine all options ##
nmap -p U:53,111,137,T:21-25,80,139,8080 192.168.1.1
nmap -p U:53,111,137,T:21-25,80,139,8080 server1.cyberciti.biz
nmap -v -sU -sT -p U:53,111,137,T:21-25,80,139,8080 192.168.1.254

## Scan all ports with * wildcard ##
nmap -p "*" 192.168.1.1

## Scan top ports i.e. scan $number most common ports ##
nmap --top-ports 5 192.168.1.1
nmap --top-ports 10 192.168.1.1

